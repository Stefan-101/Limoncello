@model Limoncello.Models.ApplicationUser

@{
    ViewData["Title"] = "User Details";
}

<partial name="TempMessagePartial" model="Model" />

<div class="container mt-3">
    <h1>
        <button onclick="history.back()" class="btn btn-outline-secondary me-3" style="text-decoration: none;">
            ←
        </button>
        <span class="flex-grow-1 text-center" style="font-weight: bold; font-size: 2rem;">
            User Details
        </span>
    </h1>
    <div class="card" style="max-width: 500px;">
        <div class="card-body">
            <p class="card-text"><strong>Email:</strong> @Model.Email</p>
            <p class="card-text"><strong>Full Name:</strong> @Model.FirstName @Model.LastName</p>
            <p class="card-text"><strong>Phone Number:</strong> @Model.PhoneNumber</p>
            <div class="d-flex justify-content-between">
                <p class="card-text"><strong>Role:</strong> @string.Join(", ", @ViewBag.Role)</p>
                <div class="mt-2 text-start d-flex justify-content-end gap-2">
                    <button type="button" class="btn btn-warning btn-sm" onclick="toggleEditForm()">
                        <i class="fas fa-edit"></i> Edit
                    </button>
                    <form method="post" asp-action="Delete" asp-controller="User" onsubmit="return confirm('Are you sure you want to delete this user?')">
                        <input hidden name="id" value="@Model.Id" />
                        <button type="submit" class="btn btn-danger btn-sm">
                            <i class="fas fa-trash"></i>
                        </button>
                    </form>
                </div>
            </div>

            <div id="editForm" style="display: none;">
                <form method="post" asp-action="Edit" asp-controller="User">
                    <input hidden name="Id" value="@Model.Id" />
                    <div class="form-group mt-2">
                        <label asp-for="Email">Email</label>
                        <input type="email" class="form-control" asp-for="Email" value="@Model.Email" required>
                    </div>
                    <div class="form-group mt-2">
                        <label asp-for="FirstName">First Name</label>
                        <input type="text" class="form-control" asp-for="FirstName" value="@Model.FirstName" required>
                    </div>
                    <div class="form-group mt-2">
                        <label asp-for="LastName">Last Name</label>
                        <input type="text" class="form-control" asp-for="LastName" value="@Model.LastName" required>
                    </div>
                    <div class="form-group mt-2">
                        <label asp-for="PhoneNumber">Phone Number</label>
                        <input type="text" class="form-control" asp-for="PhoneNumber" value="@Model.PhoneNumber" required>
                    </div>
                    <div class="form-group mt-2">
                        <label for="Role">Role</label>
                        <select class="form-control" name="reqRole" required>
                            @foreach (var role in ViewBag.AllRoles)
                            {
                                @if (ViewBag.Role.Contains(role.Text))
                                {
                                    <option selected="selected" value="@role.Value">@role.Text</option>
                                }
                                else
                                {
                                    <option value="@role.Value">@role.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3">Save</button>
                    <button type="button" class="btn btn-secondary mt-3" onclick="toggleEditForm()">Cancel</button>
                </form>
            </div>

            <script>
                function toggleEditForm() {
                    var form = document.getElementById('editForm');
                    if (form.style.display === 'none') {
                        form.style.display = 'block';
                    } else {
                        form.style.display = 'none';
                    }
                }
            </script>
        </div>
    </div>
</div>

<div class="container mt-3">
    <h2>User Projects</h2>
    <div class="container mt-3">
        <div class="row">
            @if (Model.UserProjects.Count == 0)
            {
                <h4>No projects to display</h4>
            }
            @foreach (var userProject in Model.UserProjects)
            {
                var project = userProject.Project;
                <div class="col-md-3 mb-3">
                    <a href="@Url.Action("Show", "Project", new {id = project.Id})" class="card-link">
                        <div class="card tall-card">
                            <div class="card-body">
                                <h5 class="card-title">@project.Name</h5>
                            </div>
                        </div>
                    </a>
                </div>
            }
        </div>
</div>

<script>
    function toggleEditForm() {
        var form = document.getElementById('editForm');
        if (form.style.display === 'none') {
            form.style.display = 'block';
        } else {
            form.style.display = 'none';
        }
    }

    const gradients = [
        "linear-gradient(to right, #f5ff00, #baffc9)"
    ];
    function getRandomGradient() {
        const randomIndex = Math.floor(Math.random() * gradients.length);
        return gradients[randomIndex];
    }
    window.onload = function () {
        document.querySelectorAll('.tall-card').forEach(card => {
            card.style.background = getRandomGradient();
        });
    }
</script>
